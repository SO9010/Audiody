import { Palette, ProgressIndicator, TimePickerPopup, HorizontalBox, VerticalBox } from "std-widgets.slint";
import { BookItem, CoverImage } from "book.slint";

export global AudioState  {
    in-out property <bool> playing: true;
    in-out property <bool> paused: false;
    in-out property <float> timing: 30.0;
    in-out property <string> page-name: "Audiody";

    in-out property <[BookItem]> search-model: [];
    in-out property <BookItem> book-view;

    // 0 for home 1 for search, 2 for books, 3 for settings, 4 for now playing, 5 for book-view
    in-out property <int> current-view: 0;
    
    callback toggle-pause();
    toggle-pause => {
        paused = !paused;
    }
    callback skip-forward();
    callback skip-backward();
    callback on-pause-clicked();
    callback on-search-clicked(string);
    callback on-book-view(string);
}


export component controls inherits Rectangle {
    HorizontalBox {
        alignment: center;
        spacing: 20px;
        padding: 5px;
        Rectangle {
            height: 45px;
            width: 45px;
            touch1 := TouchArea {
            }
            Image {
                source: @image-url("../img/skip-previous-svgrepo-com.svg");
                colorize: touch1.pressed ? Palette.selection-background : Palette.foreground;
                height: 35px;
                width: 35px;
            }
        }
        Rectangle {
            height: 45px;
            width: 45px;
            touch2 := TouchArea {
                clicked => {
                    AudioState.on-pause-clicked();
                }
            }
            Image {
                source: AudioState.paused ? @image-url("../img/pause-svgrepo-com.svg") : @image-url("../img/play-svgrepo-com.svg");
                colorize: touch2.pressed ? Palette.selection-background : Palette.foreground;
                height: 45px;
                width: 45px;
            }
        }
        Rectangle {
            height: 45px;
            width: 45px;
            touch3 := TouchArea {
                clicked => { AudioState.skip-forward() }
            }
            Image {
                source: @image-url("../img/skip-next-svgrepo-com.svg");
                colorize: touch3.pressed ? Palette.selection-background : Palette.foreground;
                height: 35px;
                width: 35px;
            }
        }
    }
}

export component PlayingBar inherits Rectangle {
    background: Palette.alternate-background;
    border-radius: 15px;
    HorizontalLayout {
        Rectangle {
            clip: true;
            border-top-left-radius: 15px;
            max-width: 50px;
            Image {
                height: 50px;
                image-fit: ImageFit.fill;
                source: @image-url("../img/republic2_1310.jpg");
            }
        }
        Rectangle {
            controls {
                x: -25px;
            }
        }
    }
}
export component PlayingWindow inherits Rectangle {
    Rectangle {
        border-top-left-radius: 15px;
        border-radius: 0px;
        background: Palette.alternate-background;
        VerticalBox {
            padding: 10px;
            Rectangle {
                clip: true;
                border-radius: 5px;
                height: root.width -20px ;
                Image {
                    height: root.width -20px ;
                    image-fit: ImageFit.contain;
                    source: @image-url("../img/republic2_1310.jpg");
                }
            }
            // Placeholder for the time
            ProgressIndicator { 
                progress: AudioState.timing;
            }
            Text {
                text: "Plato The Republic";
                font-size: 25px;
                horizontal-alignment: center;

                //text: root.Name;
            }
            Text {
                text: "Plato The Republic this is a description that describes the audio book, I should be scrolable!";
                font-size: 15px;
                wrap: word-wrap;
                horizontal-alignment: center;
                
                //text: root.Name;
            }
            Rectangle {}
            HorizontalLayout {
                padding: 0px;
                padding-bottom: 7.5px;
                Rectangle {
                    height: 45px;
                    width: 45px;
                    touch1 := TouchArea {
                        clicked => {
                            time-picker.show();
                        }
                    }
                    time-picker := TimePickerPopup {
                        width: 360px;
                        height: 524px;
                        close-on-click: false;
                        y: -450px;
                        canceled => {
                            time-picker.close();
                        }
                    
                        accepted(time) => {
                            debug(time);
                            time-picker.close();
                        }
                    }
                    Image {
                        source: @image-url("../img/moon-fog-svgrepo-com.svg");
                        colorize: touch1.pressed ? Palette.selection-background : Palette.foreground;
                        height: 45px;
                        width: 45px;
                    }
                }
                Rectangle {
                    controls {
                        y: -2.43px;
                    }
                }
                Rectangle {
                    height: 45px;
                    width: 45px;
                    Text {
                        text: "1x";
                        font-size: 25px;
                        font-weight: 600;
                        color: touch4.pressed ? Palette.selection-background : Palette.foreground;
                    }
                    touch4 := TouchArea {
                    }
                }
            }

        }
    }
}
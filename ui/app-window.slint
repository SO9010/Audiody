import { Button, VerticalBox, ScrollView, Palette ,ListView, HorizontalBox } from "std-widgets.slint";
import { BookItem, CoverImage } from "components/book.slint";
import { PlayingBar, PlayingWindow, AudioState } from "components/playback.slint";
import { TopBar, NavBar } from "components/navigation.slint";
import { BookDetail } from "views/book.slint";
import { SearchDetail } from "views/search.slint";
import { HomeDetail } from "views/home.slint";
import { loading } from "views/loading.slint";

export * from "components/playback.slint";
/*

    We want to have differnt sections:
        - Home page:
            - Continue listening,
            - Downloads,
            - Short lists,
            - Recemntly played
        - Search/discover
        - Books
        - Settings
            - Youtube login, drive login, download location
        - Now playing location
            - Volume
            - Night timer
            - Time left
            - Speed up/down
            - transcipt
        - Book view
        - Bookmarks
*/

// Should add rating too!
// Do some matching for the genres, and if it is a genre then return genres!

export component AppWindow inherits Window {
    title: "Audiody";
    background: Palette.background;

    min-width: 350px;
    min-height: 600px;
    HorizontalBox {
        padding: 0px;
        spacing: 0px;
        VerticalBox {
            padding: 0px;
            spacing: 0px;

            TopBar {
                height: 55px;
                compact: root.width >= 750px ? false : true;
            }

            if AudioState.logged-in: Rectangle {
                // This is where the views will go!
                min-height: 200px;
                if AudioState.current-view == 5: BookDetail { }
                if AudioState.current-view == 1: SearchDetail { }
                if AudioState.current-view == 0: HomeDetail { }
                if AudioState.current-view == 100: loading { }
            }
            if !AudioState.logged-in: Rectangle {
                VerticalBox {
                    Text {
                        text: "You are not logged in!";
                        font-size: 20px;
                        font-weight: 700;
                    }

                    Rectangle {
                        border-radius: 15px;
                        background: touch.pressed ? Palette.selection-background : Palette.alternate-background;
                        Text {
                            text: "Login with Google";
                            font-size: 30px;
                            font-weight: 900;
                        }

                        touch := TouchArea {
                            // Run oAuth
                            clicked => {
                                AudioState.logged-in = true;
                            }
                        }
                    }

                    Text {
                        text: "Audiody needs to use your google drive to store your audiobooks and currently playing/listening books, you can also add your own recordings to the audiody folder which will be automatically created.";
                        wrap: word-wrap;
                        font-size: 20px;
                        font-weight: 700;
                    }
                }
            }

            if root.width < 750px && AudioState.playing && AudioState.logged-in: Rectangle {
                height: 50px;
                // Placeholder for timebar
                // Placeholder for the time
                PlayingBar {
                    border-bottom-left-radius: 0px;
                    border-bottom-right-radius: 0px;
                }
            }
            NavBar { }
        }

        Timer {
            interval: 500ms;
            running: !AudioState.paused;
            triggered() => {
                if (AudioState.playing) {}
                AudioState.playing-action();
                if (AudioState.timing >= 0.9) {
                    AudioState.queue-next-track()
                } if (AudioState.timing == 1.0) {
                    AudioState.notif-next-track()
                }
            }
        }

        if root.width >= 750px && AudioState.playing && AudioState.logged-in: Rectangle {
            max-width: 300px;
            PlayingWindow { }
        }
    }
}
